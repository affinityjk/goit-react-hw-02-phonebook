{"version":3,"sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Form/ContactsForm.styled.js","components/Form/ContactsForm.jsx","components/Contacts/ContactsList.styled.js","components/Contacts/ContactsList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["StyledWrapper","Container","children","Form","Input","DebounceInput","Label","Button","ContactsForm","state","contacts","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","id","nanoid","resetForm","this","nameInputId","telInputId","htmlFor","type","debounceTimeout","placeholder","pattern","title","onChange","required","Component","propTypes","PropTypes","string","isRequired","func","Contacts","Item","ContactsList","onDeleteClick","map","size","color","onClick","Wrapper","Title","Section","Filter","filter","App","addContact","newContact","some","alert","deleteContact","contactId","contact","handleFilterChange","filteredContacts","normalizeFilter","toLowerCase","includes","filtered","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f54f1d55.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  padding: 30px;\n  background-color: #ffffff;\n  border-radius: 5px;\n  border: 5px solid lightsteelblue;\n  width: 600px;\n`;\n","import PropTypes from \"prop-types\";\nimport { StyledWrapper } from \"./Container.styled\";\n\nexport const Container = ({ children }) => {\n  return <StyledWrapper>{children}</StyledWrapper>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { DebounceInput } from \"react-debounce-input\";\nimport styled from \"@emotion/styled/macro\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled(DebounceInput)``;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 100px;\n  padding: 10px 12px;\n  margin-top: 15px;\n\n  font-size: 14px;\n  font-weight: 700;\n  color: #fff;\n  background-color: steelblue;\n  border: 1px solid transparent;\n  border-radius: 5px;\n  cursor: pointer;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.5);\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Form, Input, Label, Button } from \"./ContactsForm.styled\";\n\nexport class ContactsForm extends Component {\n  state = {\n    contacts: [],\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    this.props.onSubmit({ id: nanoid(3), name, number });\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    let nameInputId = nanoid(3);\n    let telInputId = nanoid(3);\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label htmlFor={`id-${nameInputId}`}>Name</Label>\n        <Input\n          id={`id-${nameInputId}`}\n          type=\"text\"\n          name=\"name\"\n          debounceTimeout={500}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={this.handleChange}\n          required\n        />\n\n        <Label htmlFor={`id-${telInputId}`}>Number</Label>\n        <Input\n          id={`id-${telInputId}`}\n          type=\"tel\"\n          name=\"number\"\n          debounceTimeout={500}\n          placeholder=\"+38 (XXX) XXX-XX-XX\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={number}\n          onChange={this.handleChange}\n          required\n        />\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    );\n  }\n}\n\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled/macro\";\n\nexport const Contacts = styled.ul`\n  margin-top: 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid silver;\n  overflow: hidden;\n  border-radius: 5px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  & span {\n    display: inline-flex;\n    align-items: center;\n    margin-left: 10px;\n    margin-right: 40px;\n  }\n\n  & svg {\n    margin-right: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 100px;\n  padding: 10px;\n  margin-left: 10px;\n  margin-right: 10px;\n\n  font-size: 14px;\n  font-weight: 700;\n  color: #fff;\n  background-color: steelblue;\n  border: 1px solid transparent;\n  border-radius: 5px;\n  cursor: pointer;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.5);\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { Contacts, Item, Button } from \"./ContactsList.styled\";\nimport { IoPerson } from \"react-icons/io5\";\nimport { ImPhone } from \"react-icons/im\";\n\nexport const ContactsList = ({ contacts, onDeleteClick }) => {\n  return (\n    <Contacts>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            <span>\n              <IoPerson size={14} color=\"steelblue\" />\n              {name}:\n            </span>\n\n            <span>\n              <ImPhone size={14} color=\"steelblue\" />\n              {number}\n            </span>\n            <Button type=\"button\" onClick={() => onDeleteClick(id)}>\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </Contacts>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled/macro\";\n\nexport const Wrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n\n  text-transform: uppercase;\n  font-size: 28px;\n  font-weight: 700;\n  color: steelblue;\n`;\n","import PropTypes from \"prop-types\";\nimport { Wrapper, Title } from \"./Section.styled\";\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from \"@emotion/styled/macro\";\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n","import PropTypes from \"prop-types\";\nimport { nanoid } from \"nanoid\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport { Label } from \"./Filter.styled\";\n\nexport const Filter = ({ filter, onChange }) => {\n  return (\n    <>\n      <Label htmlFor={`id-${nanoid(3)}`}>Find contacts by name</Label>\n      <DebounceInput\n        id={`id-${nanoid(3)}`}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        debounceTimeout={500}\n        onChange={onChange}\n        placeholder=\"Search\"\n      />\n    </>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import { Component } from \"react\";\nimport { Container } from \"components/Container/Container\";\nimport { ContactsForm } from \"components/Form/ContactsForm\";\nimport { ContactsList } from \"components/Contacts/ContactsList\";\nimport { Section } from \"components/Section/Section\";\nimport { Filter } from \"components/Filter/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (newContact) => {\n    this.state.contacts.some(({ name }) => name === newContact.name)\n      ? alert(`Contact ${newContact.name} already exists`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  handleFilterChange = (event) => {\n    this.setState({ filter: event.target.value });\n  };\n\n  filteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(normalizeFilter) ||\n        contact.number.includes(normalizeFilter)\n    );\n  };\n\n  render() {\n    const filtered = this.filteredContacts();\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactsForm onSubmit={this.addContact} />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter\n            value={this.state.filter}\n            onChange={this.handleFilterChange}\n          />\n          <ContactsList\n            contacts={filtered}\n            onDeleteClick={this.deleteContact}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}